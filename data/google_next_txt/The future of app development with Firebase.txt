 . RICH HYNDMANN Thank you all so much for coming. I'm Rich Hyndman, and I head up the Firebase Developer Relations team. We've got some super exciting announcements we want to run through with you today. I'm going to hand over to Vikas to kick off the session. RICH HYNDMANN Thank you, Rich. Good morning. How's everyone doing? RICH HYNDMANN Awesome, awesome. Great to hear you. And thank you for coming. I'm Vikas. I run product management for DevX suite of products, which includes Firebase and our languages and others. Super excited to tell you a little bit more about our platform and portfolio. But before we start, how many of you are using Firebase today? Wow, that's pretty cool. Awesome. So but for others who are not, just to recap, this clicker works. Firebase is Google's app development platform. We really have focused on one thing, to simplify app development experience for developers. So we are an opinionated product, which is easy and extensible. And our goal is to make app development teams work faster, safer, and smarter. That's what we do. And we have a mission in our team. And our mission is really to help developers succeed. Succeed at building and growing their applications that users love. Firebase has been around for a while. And we have many customers using our products today. It's trusted by the largest apps and games. You can see examples from different industries over here, including retail, like Wayfair, media companies, gaming companies. There's a company called Hotstar, which basically is in the media space as well. So if you look at games which are happening with millions of people who are watching, in one of the regions in Asia, there is a cricket, which is very popular. There's a league going on called IPL. One of the platforms there is using our product with 13 million concurrent users at the same time. So that's how it helps scale, right? So the other interesting part over here is that folks not only rely, but on a daily basis, there are 17 billion one-day active daily instances of Firebase apps deployed around the globe. That's the volume of applications that are built and supported using our platform. So, you know, we've been on a journey. But the reason we've reached where we are is because we always listen to our developer community, our customers, and help them through different transitions. I know you heard about Gen AI today morning, and, of course, you've been hearing about this over the last few months and year. And developers are facing interesting new challenges when it comes to productionized Gen AI applications. Some of these are really around the learning curve because there are new concepts and tools. There's a lot of choice out there. And just writing the right prompt is actually an art now, right? You have to focus on really doing the right set of prompt engineering. So building production-quality AI applications is hard. And with the changing landscape, we started investing in this area, you know, in the previous year. So at Shoreline last year, we announced how we are bringing products and capabilities in Firebase to actually help you build Gen AI applications with Firebase incorporating hybrid AI capabilities into the platform. What we're doing next is we're really focusing on the entire developer lifecycle from creation of the application, where it's all about the IDE, where you build an application, to enriching that application with data. Now it's all about vectors and embeddings to deploying it at scale, you know, doing the operational as well as analysis in terms of the user feedback so you can iterate and continue to improve and delight your users, and finally running it, right? So if you look at Jane's journey, who's building an application, what we really want to do is create a unique yet connected set of capabilities which can help Jane move from one part of the lifecycle of development to the others. Today, we are really excited to announce the next step of our journey here. If you've been following the news feed from our team since morning, we announced a capability called Firebase Studio, which really adds to the development run-build part of our tool set from an application lifecycle perspective. Firebase Studio, which is launched today, really brings in the capabilities that you need to get started to build applications. It's a natively agentic development experience, which has both client and server-side AI integration capabilities with SDKs as well as an orchestration framework. And you can bring in modern frameworks like Next.js, into your deployment and scale production quality apps. So what is Firebase Studio? It's basically giving you an integrated development experience which is extensible to build, run, full-stack applications, web applications, mobile applications, and backend services and more, right? Let me show you a quick demo before we dive deeper into the rest of the session. All right. So Firebase Studio, for folks who are using, have used IDX already in the room. Some of these concepts will be familiar to you. IDX is an IDE that we launched. Firebase Studio is an evolution of that, and we call it as the builder platform, if you will. Here you will see some very similar concepts from IDX, which you might be familiar in the past. Like you can go and create a new workspace which you can share with your teams. You can import repos, or you can use 60-plus templates from Android, Flutter, Next.js, using GenKit as a part of your development environment. You can write your custom prompts with a prototype agent, which is a new part of this builder, and generate applications. So in this case, I've picked up a predefined prompt to actually build an application which is going to create a tipping app, if you will. What it's doing in the background is actually generating a blueprint, a sort of a PRD, which has the features to take a bill input, do tip calculation, but also provide sort of a color, a layout for this application. Now you can see it's generating the code live. On the right-hand side, you can actually follow through exactly each step the prototyping is happening, including the generation of the API key for Gemini. So it's powered by Gemini, and it's basically using that as the backend model for generating this application. Once this app is ready, you can go and, you know, use it right here. You can deploy it. Or you can use the interactive chat over here, the agent that we have, to change the application. You can change different colors. Alternatively, you have an option to go into the editor view as well to look at the code. So the power of this platform is this. It took an idea and created a prototype app for you. But we know that for taking it to production, you may want to do more with this application. That's where, behind the scenes, you get access to the full-blown IDE experience where you can use and write code, but you can also use our built-in Gemini, you know, code assistance with different models, models like, you know, 2.5, 2.0, to start interacting and generating code that you want to make changes to this application. There are also existing prompts. What we've also done is we've provided seamless integration when it comes to publishing this app and making it available for users to use, right? So in this case, example, we've created a web application. It's based on Next.js. So we can basically publish it directly from the IDE directly to app hosting, which is going to host this Next.js app and scale it for the users which are using this application. So that, ladies and gentlemen, is Firebase Studio. It's available today for you to play and try. Can we go back to the slides, please? All right. So just to recap, Studio has an AI-centric view and also a code-centric view. Fortunately, both think the same, that it's a jackfruit. But you get access to the code as well. And then, of course, just to recap, you know, Builder, Firebase Studio, is based on VS Code, so you get access to the ecosystem of capabilities available in VS Code. It's designed for individuals but for teams with collaboration. You can do live preview but also has deep integrations and the ability to publish into app hosting, which you just saw in the demo. So to tell you more about app hosting, let me call back Rich on stage. Rich? Thank you, Vikas. Okay. We'll go that way. So that was Firebase Studio. Thousands of developers have already seen the blog post this morning and started creating new applications with Firebase Studio. And once you've created your apps, you're going to want to get them live into production. And Firebase app hosting helps accelerate the development and deployment of modern full-stack web apps. Starting today, Firebase app hosting is now GA, ready to support you and take your apps into production. So right now, we have support for Angular and Next.js. And also in preview right now, we have Astro and Nuxt that we're building support out for as well. So what is Fire... Has anybody heard of Firebase app hosting before? A couple? That's good. We announced it last year at Google I.O. in preview, but now as I say, we're ready to go GA. It's a Git-centric serverless hosting solution for modern web apps. So it can work with you and your build processes and get your apps, manage the entire thing right through production. It has a local emulator, so you can work locally as well before you go through. Firebase app hosting manages the entire stack for you. We've got connect to GitHub, full CI, CD, CDN networking, server-side rendering, into production. Also, you probably know already, but Firebase has client SDKs, but it also has server-side admin SDKs. So your server-side code can reach all your Firebase resources as easily as your client-side code. Firebase app hosting is opinionated. It gives you a clear path, but it is also very flexible. You can customize app hosting to meet your app's business needs. We provide the defaults for Cloud Run, but you can go in there and you can change them. You can change your min instances, max instances, concurrency, memory limits, and CPU limits. You can go in and configure it all yourself, but we'll give you a quick route with recommended best practices. It's also built on enterprise-ready Google Cloud services, which means you get, with Cloud Run, scale-to-zero pricing, DDoS protection, VPC network, and enterprise-grade secrets management. So that's app hosting taken care of, another big release from Firebase today. But your modern web apps also need dynamic data. And for that, we've got Firebase Data Connect. Last year, again, we announced Firebase now has a SQL database. Well, more importantly, or more accurately, it has a relational database solution for developers who want to create secure and scalable apps with Cloud SQL. And today, Data Connect is also moving to GA, ready to take your apps to production. We've also added new Gemini assistance, expanded query capabilities, and React and Angular support. So your new AI apps deserve a modern, dynamic SQL database built for the AI age, and we have you covered with Firebase Data Connect. But what are we really solving here? I mean, you've got a SQL database and you do not want to put that out on the internet and let mobile and web apps query it. That's not best practices. So you'd go and build your own servers, they'd connect to your SQL database, you'd put up some endpoints and your apps would connect to the endpoints and you'd build the whole thing out. But now with Data Connect, we sit in between the SQL database, you've seen the Postgres on Cloud SQL, and your mobile and client apps so you can get up and running super quickly. You just define the schema for your database in GraphQL and specify the queries that you want to be able to make. Data Connect is going to go and set up the database and manage the database for you and then also create secure type-safe SDKs for mobile and web apps so you can just call directly into Data Connect and it will deal with the SQL for you and it's all secure. Also, with the vector embeddings there, Data Connect can also streamline the creation, storage and querying of vector embeddings as well. So on the left, we have our GraphQL. This is for a movies app example. So we define our movies table in GraphQL. We say in our app, we're going to need to be able to query movies by year and we just specify that here as well and Data Connect will go over, create the tables for you, manage the SQL database and also create client SDKs with the movies by year function in them so you have one nice centralized place where you can define the calls that you're going to be able to make to your database and also the tables and the structure of your database and then we do the rest. You can just drop in the SDKs in your apps and we'll connect it all up. Simple and secure. And of course, I mentioned Data Connect can work with Vertex as well and Vector Embeddings. It can streamline using Vector Embeddings in Data Connect so you can get retrieval augmented generation with your LLMs a little more streamlined than other mechanisms. Okay. That's Data Connect. That's two or three big announcements including Firebase Studio. But what if you want more complex AI flows in your applications? For that, we have GenKit. Has anybody heard of GenKit? A few more hands? Nice. Thank you. Okay. We've been seeing, obviously, we've all been seeing the emergence of new types of AI-powered applications. Exciting use cases coming up every single day. New ones today I've never even seen before. And developers have been asking for new libraries, new developer tools to help them build and accelerate getting to production with AI. So that's why last year, as Vikas mentioned earlier, Firebase expanded its entire mission to help developers build and run modern AI-powered experiences that users love. And we have GenKit. Node.js went stable very recently. The Go library for GenKit is in beta and Python's currently under very active development. We thought it was very important to get live with Node.js and go pretty early on. They're very underserved in the development world for AI. So we've got those out there. GenKit's comprised of three main parts. We have our SDKs, our plugins, and our dev tools. The SDKs have got all the core primitives you need to be able to for all the generative AI, the building blocks, that was the word I was looking for. They've got all the building blocks you need for building any generative AI flow. They've got the embedders, vector stores, tools, agents, and the other building blocks of AI applications. And they're lightweight and idiomatic. Our plugins build on top of the SDKs to give you connectivity to very specific instances of those. We have the Google official plugins for Gemini, Google AI, Vertex Model Gardens, but there's also community plugins as mentioned up here as well. And because the plugin ecosystem is open, if you want, you could build your own plugins privately and use them for custom integrations as well. Then we've got the developer tools, that feedback that Bacass had on the slide here and that we all know. Developer tools for AI and building AI systems are super critical and still pretty much in their infancy. And GenKit has a dedicated CLI and a developer UI that lets you rapidly test your AI functions and prompts. You get to debug your application code, evaluate the outcomes, and have multiple test cases running all the time. So how do you get started with GenKit? It's actually about five lines of code. I've included a couple extra here, so just to show how flexible GenKit is. But really, you just need to install the relevant packages, GenKit.js, Google AI plugin, set your model, the model key, in an environment variable, and then with a simple snippet, like this prompt here, you can have your first generation. But because it's a unified API, use the same API across any model that you're using. So you can very easily switch in and out different models, test different models, see how well it works for your systems. And it's multimodal. We've got an image URL there as well, so you can have mixed media input and output too. And GenKit also makes it very easy to define tools. So when you're building your agents, you need tool calling in there as well. You can have tools that are defined for the flows, and they're going to go out and make the calls to other systems as well. Okay. If you're a Firebase developer already, and you love the Firebase console because of its simplicity, Firebase AI monitoring is also coming soon, and it gives aggregated views of AI traces, metrics, in a sleek, simple UI that's built purposely for AI use cases. You'll be able to see your token usage, success rates, things like that. It's currently in private preview, but it's expanding very quickly. And if you want to see all the data in detail, it's powered by the cloud operations suite, and you can dig into the full details inside the Google Cloud console. GenKit uses the Google Cloud telemetry plugin, so everything is in there that you might want to see. Extremely powerful, robust system for viewing relevant performance metrics. Okay. That's enough of GenKit for now. Going back to Vikas, what else are we doing for developers, and what are they saying, Vikas? Before we switch. Yes. What about evaluations? I think, you know, folks here are trying different models. What do you think about evaluations? And what does GenKit offer over there? What does GenKit offer for evaluations? So if you saw in the dev UI that Rich was talking about, it has the concept of evaluating versus different models, which you can do side by side, and you can set the temperature and start looking at it. It's a very powerful concept here. The second thing, I think, which, as Rich went through, we went through the entire journey of creating and scaling an application from using a natural language prompt to create an application to deploying to a modern web framework like Next.js with app hosting, applying dynamic data backed by SQL with Data Connect where, you know, you tell us and we generate everything from an abstraction perspective for you and then the AI pieces which integrates with GenKit. What's interesting is in Studio, when you apply the natural language prompt, we are generating all of those behind the scenes for you and that's our vision. That's the path we are on. So when you're deploying to the web application, the code is also generated by app, for app hosting with Firebase Studio, right? The next thing which is coming up which you'll be hearing more from us at I.O. is around persistence where with dynamic data, you'll be able to plug it in as well with Firebase Studio. So yeah, I just wanted to make sure that we recap. We have a number of announcements back then. Thank you so much, Rich. Really appreciate it. Thank you. Thank you. Thank you. Thank you. Thank you. Thank you. Thank you. Thank you. Thank you. Thank you. Thank you. Thank you. Thank you. Thank you. Thank you. Thank you. Thank you. Thank you. Thank you. So to bring it home, you know, we've been really announcing this capabilities over the last one year through Shoreline and through different forums. Firebase community is a very active community. We love to work with you all. We love to work with our customers and that helps us stay honest, right, when we are building the product. So we have a number of use cases which we are seeing, emerging use cases. As an example, on the top left that you see over here, this is a use case for a startup which is using GenKit to do outbound customer sales. They've actually deployed their entire application on GCP and they built the entire, you know, outbound sales, you know, use case using GenKit and GCP. Firebase Studio is used by many, you know, hundreds of thousands of developers who are using it to create, you know, different work streams and applications. The Vertex AI SDK use case on the bottom is very interesting. An application which basically takes in receipts and quickly processes them, stripes them so that you can start submitting as well. In fact, one of the gaming companies came up with a very interesting use case of really taking Gemini and using it to analyze and understand user voice and do translations as well. and then, of course, Data Connect which basically brings in the strongly typed data structure with built-in security for use cases which, you know, folks are using to build applications. So, we've got, you know, a lot of developers out there, you know, hundreds and thousands of applications which are already using these set of capabilities, some of which went GA but they're already being used by our customers and these are some of the more common patterns that we're seeing. But what we want to do next is really bring it up at scale and that's where today we are excited to announce new offerings under Google Developer Program. Have you heard of Google Developer Program here? Yeah? Are you signed up? So, it's got really interesting offerings for developers. Today, what we are focused on is really helping scale this set of technologies in Google Cloud and Google at large to help millions of developers to build what's next. So, our vision is not, you know, is to really build the deeply connected development experience you know, at a much more broader level. It's not just focused on features and models and products but to enable the developers to build these applications we are actually investing in these you know, communities and skills enablement and access to tools, right? So, what we are seeing over here is a couple of the offers which are coming out. AI Enhanced Premium which is targeting individual developers. You get Gemini Code Assist but also credits to start building your applications. The real game changer over here is the enterprise offering where for larger organizations we are really bringing in things like the Google Cloud developer sandboxes so that you can have different environments to start building applications and testing. Also have access to Gemini Code Assist Enterprise and unlimited Google Cloud Skills Boost. So, if you haven't go ahead and sign up for GDP it just literally takes like a few seconds to get it done and you get access to all of these capabilities. So, that's a wrap to our session but we have a few more for you to focus on in the next couple of days. We have some really exciting follow-ups and announcements which we are sharing and going deeper. If you want to learn deeper about Firebase app hosting, that's tomorrow morning. Julia Reed is going to be covering that with Esther. Then we have a deep dive on GenKit with Chris and Dimitri and then of course Data Connect as well tomorrow. Today afternoon we have the Crashlytics product deep dive which is happening today afternoon as well. So, our goal here was to walk you through how Firebase is evolving to help developers continue to build applications but now in the new agentic world, right, create agentic applications for the future and to do it in a much more simplified way so that you can get to your outcomes faster. We are really excited about what we've been working on which we shared with you today. We want to have you along with us in our journey so try our products, use them and let us know how it's going. Rich, do you want to come on stage and say thank you? Thank you all for coming and really appreciate it and we wish you all the best for the rest of the week attending Cloud Next. That's right. Thank you so much all for coming here today. We appreciate you taking your time. Go and try Firebase.studio. All right. Thank you. And for those who wanted to go and see the products, they are on the show floor downstairs. We have our entire team of DevRel developers out there, engineers, who will be really excited to meet you in person. All right. Thank you so much for coming. Appreciate it. Thank you. Thank you. Thank you. Thank you.
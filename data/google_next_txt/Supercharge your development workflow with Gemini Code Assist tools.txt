 So this is your AI assistant for developers in the IDE. Before we jump in, let me just ask a quick raise your hand poll. How many of you have used Gemini Code Assist? Awesome. That's good. That's good to see. How many of you are using some other AI assistant in the IDE? Awesome. And so hopefully we'll make the session nice and interesting for all of you. We have a few things we're going to cover in the session. There's four of us who are going to be talking to you. So first off, I'm Srinath. I'm a product manager here at Google Cloud. And I focus on Gemini Code Assist tools. So that's going to be the focus of today's session. And so hopefully we'll be telling you a little bit about what tools are, how you can use them, and all of that. But before that, just to make sure we're all on the same page, covering the basics. So Gemini Code Assist is an AI assistant for developers in the IDE so that they can do all of their development tasks with much more ease, especially when there are some types of tasks that they either find boring or there are some hard problems to solve where they need to brainstorm. Gemini Code Assist can be incredibly helpful. So what can Gemini Code Assist do? It's an assistant that can help you design the feature you're building. It can help you write unit test cases. You can use it to debug various errors. So it's pretty much end-to-end. Whatever you're trying to do as a developer in the IDE, Gemini Code Assist can help you with this. So before we jump into tools and before we start talking about tools in more detail, we have Kiran and Aron from CME Group who are going to tell you a little bit about how they are using Gemini Code Assist. So with that, Kiran. Thank you, Sri. Good morning, everybody. I'm Kiran Panja from CME Group. I look after the data and cloud engineering functions over there. And over my career, I've been part of several digital transformations. And there's one universal theme that always pops up. Transformations are hard. So you always look for accelerators that'll help you get through the transformations as you go through your journey. So today, along with my colleague Aron, we're going to share how CME Group was able to use Gemini Code Assist as an effective accelerator. And we'll share the outcomes we were able to achieve so we were able to measure the efficacy of using Gemini Code Assist. So I'm going to share a little bit about how we went about it and what business outcomes we were able to achieve. Erwin's going to talk about the logistics, about the tech deployment, and how we were able to get through the complexities of deploying a new tech and getting it adopted at CME Group. So let me start by telling you a little bit about CME. Most of you probably know that CME is the world's largest derivative exchange. But more importantly, CME is where our customers come to manage their risk. So how do we do it? We provide a wide slate of futures and options across FX, OTC, cash markets. But while we're doing that, we're also providing effective data and analytics so that our customers can manage risk, have insights into what risk they're carrying as they're doing their transactions and rolling out their trading strategies and maximize their opportunities in the markets. So we've been able to be a market leader by continuously innovating for our customers. So in our 175-year-plus history, we've been at the forefront of changing how we do what we do to meet the evolving needs of our customer. And our latest chapter in that innovation journey is partnering with Google Cloud to accelerate our software delivery and accelerate our ability to innovate. And as part of this, we not only changed what tools we're using, what cloud technologies we were using, we also changed how we were doing it. We adopted a product operating model. We adopted agile. We adopted SRE practices. And as you can imagine, this meant that a lot of our colleagues across CME had to take on new roles, had to learn how to do things a different way. And this was very hard initially. So we constantly looked for ways to effectively ease the burden of that transition through accelerators. And Gemini Code Assist proved to be a very effective accelerator for us. So in terms of our journey, when we first started out and we were organizing in the product operating model into different portfolios, we brought the business and the tech together. So now the business folks have to operate as product managers and product owners, which is a different style for them. Our developers had to relegate some of the control and act more in a scrum team in an agile fashion and switch priorities as we learned more about our customer needs through the sprint processes. We also had to learn a lot of new technologies. So when we started piloting Gemini Code Assist, it allowed us to help the teams learn about the new tech, learn about the new processes, and be effective product owners, be effective scrum masters, be effective coders in the agile method. So I'm going to share what we achieved in terms of numbers. The first thing when you're deploying a new technology, you're always concerned about, are people going to adopt it? Especially when you have really good SMEs who have been really good at their job. It is hard to move them up. It's a cultural transformation. That's usually the hardest part. It's not the tech. It's not the tools. It's not the processes. It's moving people along is the hardest part. So the first thing we measured is, are people using it? What we found is, once we onboarded pods and developers onto Gemini Code Assist, consistently 75% of them were using it every week. We had about 36,000 requests per day as of two weeks ago. So this was showing us that, hey, people are adopting this. We are embracing a new technology. So what? Right? What are we seeing in terms of outcomes? First outcome, we measured the output of the development teams in terms of pull requests, which is basically when code complete, you do a pull request to promote your code. We saw before we engaged over a six-month period, and then after we onboarded people onto Gemini Code Assist, there was a 45% in the number of pull requests those development teams were doing on average. Great. What it then translated into is, every developer that got onboarded was saving an average of 10 and a half hours a month. This is productivity that you can reuse for whatever you want to use. You can either do things that you were not able to do before, or have a higher velocity in terms of your story points. With that, I'm going to hand it off to my colleague, and he is going to talk about how we went about this program. Thank you, Kiran. Hi, everyone. I'm Arun, and I have about a decade of experience in enabling digital transformation in financial services, and right now, I'm super focused on improving software engineering experience and enabling teams to innovate faster at CME. So as Kiran covered, how did we get this value from Code Assist? So I really wanted to touch on how did we approach the rollout, how our teams are using it day-to-day, and what are we looking forward to? So our Gen.AI journey with Gemini Code Assist started back in late 2023. So we were early access partners through the Trusted Tester program, when it was still called Duot AI for Google Cloud. We started off with about 20 early pilot users, and we've organically grown to more than 500 users now. So as we started off, our goal was to provide an always-on AI assistant for developers that can help improve their productivity, help them with their routine tasks, so they can really focus on high-value work. So we've always assumed this was not an end-to-end automated solution. There is always human in the middle. So one of the key aspects, like Kiran was talking about, the way that we approached this rollout was to provide this assistance to all the roles in our software delivery lifecycle, starting from product owners to architects as we are planning, to software engineers as we are developing, to QA engineers as we are testing, and to our SREs as we are releasing software and continuously monitoring in production. We use Code Assist for two primary types of use cases. So one is as a coding copilot. That really helps us with creating codes, generating tests, translating code. So that's one area where we have seen a lot of good success. It really helped us move the needle in migrating from .NET to Java, Angular to React, Cobalt to Java, etc. The second set of use cases where we're using Code Assist for is in content creation and documentation. For example, our product owners use it for writing requirements, for enhancing acceptance criterias. Architects use it to generate initial versions of designs, and RQA engineers use it to generate release nodes and help improve code documentation. Now, what we've recently seen is that Code Assist has been helping us a lot in reverse engineering analysis and some forward engineering activities. So one of our teams recently used Code Assist for migrating some reports to BigQuery, and they were able to get it done twice as fast as with half the number of SMEs needed. So the indirect benefit of using Code Assist is really increasing developer satisfaction and well-being. We really removed the pain points with a lot of unpleasant and repetitive tasks. So in this case, the SMEs involved in the migration really were focused on complex migration issues and not having to write tons and tons of repetitive code. Now, another great value that we're seeing with Code Assist rollout is its value in learning and experimentation, like Kiran was mentioning. We were able to... Our teams are able to learn something new, and they're able to apply it for evolving business needs. That really reduces the cycle time to experiment. So we announced recently a partnership with Google Cloud with Universal Ledger, and as we were testing it out, our time for proof of value reduced from months to less than two weeks, in part due to use of Code Assist. And our journey with Code Assist is continuing. We're looking to make it much more efficient to use for our engineering community using some of the recently released and upcoming features. So what we are really hoping to do is to really increase the suitability of responses by grounding it with our enterprise context. We're looking to provide a more frictionless experience by integrating with our SDLC toolset and really help in automating a lot of our routine development process and workflows. Back to Street to get some more insights on new, exciting Code Assist features. Thanks, Kiran and Arun. That was really great hearing from you, and I really appreciate our relationship as we work through all of these things, and I'm looking forward to working with you as we go forward as well. So we've had a good look at how CME Group have been using Gemini Code Assist. So now let's take a look at the topic for today, which is Gemini Code Assist tools. So what are Gemini Code Assist tools? So Gemini Code Assist tools help you bring your context that you really need for doing any task into the IDE. So this could be context from various tools that you're using. It could be your ticket from Jira. It could be your design document from Google Docs. We'll talk about this in more detail, but the idea there is to bring that context not only because you can avoid context switching, but additionally, that context is now available for you and the model to really talk to. So imagine if you're talking to the model about a piece of code and you ask a question. There's some issues you'll run into. The first piece there being that the data that you're looking for or the data that you're looking at is not readily available to the model. So to give you one example, if you look at, let's say you're using some kind of performance monitoring tool. So one of our partners is Sentry. So if you look at the data that they provide, right? So if you're looking at what's happening in your code and you're talking to Gemini Code Assist about what's happening in the code, that's one aspect of this. It can give you answers, but it doesn't really have the same full picture that you have when you're going and looking at one of these many tools and looking at what their dashboards are providing you and what data you really have there. So bringing in that data without interrupting your flow is a big part of this, right? But once we get past that, how do we help you increase your productivity? So anytime you need to iterate, anytime you need to solve problems, there are a few things that stand in the way. One is, like Arun was mentioning, you know, when developers are trying to do things, they're more satisfied if they get to do more of the things they enjoy and less of the things that they don't. So Code Assist can definitely help you with that. When you're trying to do some of the most fun things, of course it's exciting, you're able to do it, but sometimes there are things that you need to do, like it depends, right? Each person has their preferences, but I would think most people would say that, you know, making sure that my test coverage is 100%, I'm usually like 30, 40% of the, like my mind space is already in the next feature that I need to build, right? So what if I could pull the data that I need there, whether it's in terms of results, whether it's in terms of the test plan, and make sure that everything that's needed is implemented and I can use the AI assistant to really help me do that seamlessly. So that way we're able to help you increase productivity and also improve code quality. So how do we help you increase code quality? So when you talk to a model, there are two fundamental things that are really going to make or break how good your engagement is with the model. The first piece is your prompt, which is why we at Google Cloud when we're working with customers spend a lot of time talking about how do you craft prompts and how do you get used to those types of processes so that your prompt is telling the model precisely what you're looking for. And the second piece is the context. So when it comes to anything you're doing with an AI assistant, context is king or queen, right? So if you look at, we're already doing this in terms of bringing the code context into the IDE. You could look at local code base awareness, you could look at code customization, and if you're not familiar with those things, please, there's a bunch of nice sessions we have. There's one tomorrow that talks about code customization that I definitely point you to. But basically, the idea there is what can Gemini code assist do to pull in the relevant context and make it available to the model when you are asking a certain question. This could be in terms of just one example. If you're writing a test, generating a test case, the model would benefit from knowing what your test cases look like. So can we find that and send it along the way, right? So that's where that talks about code context. The second piece is what we're going to talk about today, which is the engineering context. So as you're doing your day-to-day job and your engineering role, there are various tools that you need to interact with. With Gemini code assist tools, what we are able to do is we are able to use, on your behalf, we're able to use API calls to talk to those tools and get the relevant data that's required to the IDE and make it available to the model as context. So how can you use Gemini code assist tools today? So you can use Gemini code assist tools today by going to the chat panel in Gemini code assist and using the at operator. We'll show you a demo in a few minutes about exactly how this works, but remember, you can always do that. And if you ever need to know what a tool can help you with, you can just go and say at tool name and then say help and then it'll tell you here's all the things you can try with this tool, et cetera. So that's a little bit about how Gemini code assist tools can help you. Now we have a, we have quite a few partners, many of whom are here in the audience today. Thank you all for your help and support in helping us build this and we're looking forward to grow this to more and more partners over the coming months. Finally, who can use Gemini code assist tools? So Gemini code assist tools is available to everybody who's using Gemini code assist, whether you're using standard, whether you're using enterprise, or if you're using Gemini code assist for individuals. So I would definitely like you all to go and give it a try and how this also helps you grow, how this will help you beyond just the scope of tools is I'm sure many of you have attended some of the sessions about agents and various things that we're doing. So Gemini code assist tools, again, takes all of this context and beyond giving it to you in the IDE, also makes it available to the agents so that the agents are more powerful and able to help you solve these problems in a much more seamless fashion. With that said, I'm going to call Christine on stage to tell you a little bit more about the, do more of a technical deep dive and then show you a demo on how this works. Thank you, Sreenath, and thank you all for coming this morning. I'm Christine, and I'm a software engineer on Gemini code assist tools, and today I'm going to be doing a high-level overview of the technical infrastructure for tools, and then I'll also be doing a brief demo. So as a user of tools, you'll experience two different types of tools. The first are ones that are making calls out to APIs on your behalf, and those are the ones that I'll give an overview of in the next slide. The second type of tools are those that are making a call to another tool that's running in your IDE. So currently, we have Snyk and Apigee for these types of integrations. So at a high level, the tools architecture for API-backed tools looks something like this. The user makes a request, and Gemini code assist will take that and break it down into one or many API calls. We'll then call the API on your behalf and transform that into a summary to provide to the user. To go a little bit deeper into that, the high-level lifecycle of a tool, so let's say I say Google Docs list my docs. We have a check to see if the API can handle that request. So if I say, Google Docs do my taxes, unfortunately, I'll get a response back that says, I'm sorry, Google Docs cannot do your taxes. If the answer is yes, we'll break the user query down into one or many steps and then call the API on your behalf. And we do this using open API specs and other types of tool definitions. After that, we summarize the API response and provide it back to the user. Now I'm going to do a demo of what a tool invocation looks like, and for this demo, I'll be using some code that I generated with Gemini that creates a simple notes app that you can use to write notes and create notes, et cetera. So I'm going to clear this and get a fresh start. So for the purposes of the demo, let's say that my manager reached out to me and said that in Sentry we're seeing a lot of errors relating to a deployed version of this code. I can say, at Sentry, list issues in project, next, demo. And what this is doing is making calls out to the Sentry API on my behalf to search for this project next demo and get issues within it. And now it's summarizing a response. Great. If there were more issues, it would list all of those out, but this is the one that we care about. So I can say, Sentry, get me the details of issue next demo 7. And what's nice about this is as Srinath mentioned, not only are you reducing context switching because you're not having to leave the IDE, you're also able to provide context for Gemini Code Assist. And so if it responded with an issue that seemed really complicated, I could use Gemini Code Assist to take this as context and also the code and generate changes. It turns out this is actually, because this is a demo, something that's pretty easy to fix. There's a check happening here resulting in an index out of bounds error, and I can get rid of that and everything will run smoothly. So I'll show an example of code running here. We can add a note, clear notes, whatever. So let's say, again, for purposes of the demo, that my manager has reached out to me and said that we're getting complaints because the notes don't persist across sessions. So if I restart my server, I'll see that my note disappeared. So he assigned me a JIRA ticket around this, and I'll make a call to Atlassian Rovo and say, get me the details of the issue around note persistence. And this is actually making a call to Atlassian's Rovo offering, which is an AI agent on their end. So they're doing the reasoning instead of us, and it leads to really great results as we're about to see. Also, as Srinath mentioned, this is actually, a demo is happening in Code Assist for individuals. So anybody can set up and try this out. We're in public preview as of a few days ago, so really excited to get everyone's feedback. So this is the response from Atlassian, and I can see that there's a design doc linked. So I will say, Google Docs, get me the full contents of the doc, and then I'll paste in the name of the doc. And this is making a call to Google Docs on my behalf. This is, again, something that is nice because I'm reducing context switching. I'm not having to go and read the Google Doc, but also I am gathering information that I then can provide to Gemini to generate code on my behalf. So I'll say, great, now that I have this whole design doc, I can ask it to generate code to update the notes app for the changes outlined in the design doc. And I don't need it to, explanations required. We'll just get the code, so I will run that. And we recently introduced streaming, which we should be able to see in Gemini Code Assist. It's coming out kind of as we get it, which is really exciting. So it's generating code. And once that's done, I can copy that over. So I'll preview changes. And luckily, my manager's not here. I'm not going to read through this. I'll just accept. And I'll save that. I will restart the server. And we'll see here. So I'll add a note. I will close it down, run notes, refresh, and it's there. So that's exciting. So thank you all so much. That is the demo of my notes app. In addition, I want to call out that if you're finding yourself as a user of this and you're wanting to figure out what you can do with a tool, we offer a help command. So you could say, for example, new relic help. And the tool will generate, provide to you a list of the things that it's able to do. In addition, if I wanted to take this further, there are lots of opportunities to do that. So, for example, I could leverage the MongoDB or Neo4j tools to turn this into a production working service that isn't just something that I'm running locally on my computer. And with that, we will transition over to a panel. Oh, yes. Bring everyone back onto the stage. Okay. Okay. Thank you. Thank you. Thank you. So, hope you all found that interesting. I know we've had a lot of conversations about this, and so I had a few questions for you, right? So, we've obviously been through the journey of adopting Code Assist, but with respect to Gemini Code Assist tools, how do you see that improving developer productivity as we go forward? So, as Christine alluded to, right, context switching is the number one productivity killer for developers. They hate getting out of the IDE. They want to stay in the IDE. So, leveraging tools, as you were very effectively demoing, those are all the things we have to do today to understand the effect and the issues and how do we need to resolve things. So, being able to stay within that IDE and leveraging the tools and integrating with the tool chain systems that provide the right information so that they can make the right updates, to me, that's going to be a huge time saver for us because we talked about the quantitative benefits in terms of numbers of what we were getting, but we have some qualitative benefits of Genini Code Assist as well, right? I mean, there's a higher developer satisfaction because they don't have to do the mundane tasks that you have to do as a developer. There's also this notion of, you know, you can't know everything, right? Within a code, you're part of a team. You're constantly needing to ask the person who writes the code, hey, what do you mean by this? And sometimes that can be embarrassing, right? I mean, as human beings, we'll ask the person as a be once, twice, that you're worried about, what is that person going to think about me? So being able to leverage the explainability, whether you are an SRE, whether you're a QA agent, or you're a developer that works on different parts of the code, that to me, with the tools, the power of that gets extrapolated. So is there anything you want to add? No, I think you covered it. It really is all about, for us, is context switching. We do a lot of civil sharing. We have tons and tons of tools. So we're really looking forward to it. Arun, a question for you, taking all of this in and the work that you're doing. What do you see as ways that tools can further support you and your team going forward? Yeah, sure. So I'd say treat our customers as partners as well. So kidding aside, just in terms of how we are opening this up for partners to provide their solutions in the IDE context, we have internally developed a lot of tools over years to improve productivity, to improve efficiency. So it'll be great for us to plug in some of our custom-built tools into the IDE as well. So that'll be a great value add. And it'll help us over a period of time to help us rationalize and optimize our tool sets as well. Yeah, I think we would love to partner with you on that. That's wonderful. Kieran, a question for you. What else have you heard at the conference that you're excited about? So, especially the keynote speech, I was texting my team every 15, 20 minutes. Everybody goes, we should be doing that. We should be doing that. So the agent space, right? I mean, as an organization, one of the things we have as a regulated organization, we can't let tech that accumulate, whether it's vulnerabilities, whether it's patching. And these are things most developers or even product managers, they don't really want to prioritize because they're like, I want to build a cool new feature. But to me, the ability to understand and prioritize security fixes, upgrades, that's going to completely change for the use of agents. We have to do it, but it makes it easier to do that. Today, as we are rolling out the portfolio, our planning sessions, right? One of the top things I've heard from other portfolio managers, man, the run the business aspect, which is your patching and updates and stuff that you have to do, typically, we want to be around 20 to 25% of our development capacity dedicated to that. With the number of Java upgrades and switching from RHEL going to different versions of that, that we've, maybe over time some of them have not done it, it's a high burden for them now. So they're seeing that some of their pods, they're capacitates up to 50% for those running the business. So using agents to streamline that reduces the amount of capacity you have to dedicate to these things that you absolutely have to do as an enterprise. So that's, to me, is very exciting to look forward to because this is something I know my teams are going to be thrilled about that they don't have to worry about it. The other thing, you know, beyond just technology, right, what resonated was how we can change our business processes with these agentic tools to streamline what they do and give them back time and get them to be more self-sufficient instead of always looking to a technologist and say, how do I get this done? So I think a lot of the announcements you had around agents, those are the ideas that are popping to our head. Obviously, we have to, like, go through, I'm hoping we can have a strong partnership as we embark on these things and I try some things out because even with Gen.EI, right, I mean, we weren't, sorry, the code assist, we weren't expecting the results we got. We were hoping it'll give us a little bit of a boost, you know, help along the way. I think the entire management team when we presented the pilot results towards the end of last year because we had a slow pilot where we went from 20 people in the pilot to 60 because we had to bring along our legal compliance and infosec teams because they had to understand the implications and efficacies of using tools like these which are still evolving and by the time Q4 rolled around and we were giving a readout of what we had achieved, I think it just, everybody was blown away, including us. We were, we had to double check and triple check our numbers like, is it really true? So, I'm really excited about how that change, that expands our ability beyond what we are doing today with just the tech engineering teams to the other teams in the organization that also play a very integral part in that entire process. Yeah, I think that for us tools are really building blocks for agents and it's so exciting the future that we're seeing and even, you know, playing around as a developer myself using, for example, the sneak extension to generate security vulnerabilities and address them right away in the IDE. It's really incredible and just the knowledge and tools available to us is so rich that it's a really exciting time in this agentic world. That's an interesting point you bring up, right? Most of the time security engineers have always thought of themselves as the guardians of an enterprise, right? They're helping make sure that we don't fail but in the adopting a product operating model and these tools they are able to visualize how they're actually enabling the innovation which is a complete shift mindset set for them and it took them a while too, right? Because for two decades most of them have been like our job is to make sure you guys don't screw up, right? Not that we don't trust you but we'll put guardrails to make sure you don't screw up and when I first started talking to them about hey, you guys are an integral part of innovation. Without you it doesn't matter and they were like no, no, no, hang on. We're not innovation drivers, we are protectors. So then we started exploring how getting the security visibility early on in the process actually shortens the time frame because if you wait till you're in production or in UAT testing to find out vulnerabilities you've got to go all the way back. Right now, right when they're code complete, when they're doing coding, we have policies that warn the developers hey, you're using these things and in this manner these will flag you so they can fix it before they even get into integration environments. So when we looked at those numbers and shared how secure from the start mindset is helping the entire development process which again results in increasing your pace elevation. It's simply mind blowing. And you're taking away a lot of the friction from doing the boring things. Yes. Right? So in general everybody's happier and everybody's more productive. That's the number one thing that I don't remember when he was sharing we do a lot of surveys to figure out because beyond the numbers like I was talking about connotative is kind of you can get from the numbers but the qualitative measures are you can only get and he had a whole list of people saying I had a DBA who has been a DBA his entire career 20 years. He learned to be an effective Python coder on his own in six weeks and he when he was sharing the story with me he said you know in the past I've tried to kind of like dabble in coding because I mean I'm a sequel guy so I can it's so logic is there but it was hard for him to ask the people his colleagues that he's friends with also and too many times hey how do I do this how do I what does this mean with Jenna I code assessed it's like I can ask seemingly dumb questions and not feel as a human being that I'm bothering somebody or your ego it's there's so many examples of I had a security engineer who became one of our Terraform experts he's writing the IAC pipelines for us to deploy a lot of our computer stuff so these are examples like you know tangible things that don't necessarily show up in the numbers but these things matter and I think the tools and agents I think it's just going to amplify what we're able already do with these things so I mean we're really excited about the notion and the concept and what the agents might bring to an enterprise like us and speaking as a product manager I feel that the thing that gives me happiness is when I work with customers like you and I see that you're really able to deploy that successfully right so maybe if we have some time since we have some time are there any questions for us in the audience we can take a few questions and I hope can Dual
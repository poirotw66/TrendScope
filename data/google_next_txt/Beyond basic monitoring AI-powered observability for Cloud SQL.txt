 Imagine empowering your developers who build and run these applications to proactively manage their database performance issues. What if you could help them do that without them having database expertise? That is exactly where AI-powered observability in Cloud SQL fills it. We provide the intuitive insights and tools that they can use to troubleshoot these pesky performance issues. Hi, my name is Sujata Mandava. I'm Director of Product Management here in Cloud SQL and Google Cloud Databases. And today I'll be talking about AI-powered observability in Cloud SQL. Before we dig deeper into observability, let's talk about Cloud SQL. Cloud SQL is a fully managed service for MySQL, Postgres, and SQL Server. It's an extremely popular service in Google Cloud databases. It is used by more than 95% of Google Cloud's top 100 customers. It is the same relational database you know with all the configuration, the rich extensions, the developer ecosystem, but with low operational overhead or no operational overhead, reduced risk so that you can focus on innovation. We designed Cloud SQL to be a developer-friendly platform, which means it's an API-first approach. Our services, Postgres and MySQL, are Gen AI-capable. That means you can do vector indexing, vector search for your Gen AI applications. Our big focus lately for developers has been observability and how we can make this intelligent observability help you along your application journey. Let's explore in detail. When I talk about observability, I think of three different pillars, and that's what insights or observability is built on. As part of the ingest pillar, you get enhanced real-time telemetry with granular data. You get extended retention, and you get rich diagnostic signals so you can debug those complex performance issues. Secondly, with insights, you get interactive visuals. You get intuitive views on database key elements like query plans, like weight events, so that you can actually proactively find these issues and get to identify and resolve these pesky performance issues, you know, like problematic queries and, you know, freeing up resources. Finally, insights offers guided troubleshooting tips, proactively highlighting these potential issues, you know, really democratizing, you know, observability and debugging performance issues. The new ingest and analyze capabilities are available as part of query insights for Enterprise Plus and are generally available now. The AI-assisted troubleshooting, which is part of the prescribed pillar, is available in preview. I would really ask you to try out these new features and provide us feedback. Now, let's see a quick demo of these AI-assisted capabilities. Enterprise Symbol is a mobile app that really helps streamline the process of commodity inventory tracking. It is an app that's built with Firebase for its real-time capabilities and leveraging Cloud SQL for Postgres in the back end. Users have had a great experience with this app, but lately, they have been seeing a little bit of a slowdown in the performance of this app and not able to load some of the location tracking. We know that we have not rolled out any application changes. So, what we wanted to do was try to troubleshoot this problem a little bit more. And typically, we would call a DBA to investigate, but none of them were available and we needed to resolve these things quickly. Fortunately, we have Cloud SQL Query Insights. As you can see here, Query Insights provides you a way to drill down to that specific time period when that problem is happening. It was able to zero in on the query that's actually taking the select query that is taking the longest of execution time. And what you can do is, as you analyze the query, you can identify when exactly and how much was the query latency. With the analysis, Query Insights automatically runs through a number of checks in terms of checking why this query has been slow. It checks for data volume. It checks for log contention. It checks for changes in query plans as well as any changes in the system resources. As you see here, none of the other checks failed, but the changes in the query data volume definitely has failed. So, what you can see further analysis is that there has been a 10x increase in the data volume and a 20x increase in the query latency time. So, now that we've identified the problem, Query Insights goes one step further. It's able to identify that the index, the lack of an index is the issue for the query latency and give you the exact command to add an index to this query. You can also not only take the query and apply it, but you can also leverage database studio to apply this command. And you will notice that it makes it very easy for developers to be able to make that change through studio. And once you have made that change, then you can see that the application is up and running in no time. So, in essence, with AI assisted troubleshooting, you can democratize a database observability so that you can have the DBAs freeing up for strategic projects. You can reduce operational disk with lower downtime, and you can also improve time to market and get apps, you know, through the development cycle much faster. So, we didn't just stop there. We'd have insights. We have these recommendations and insights, not just for an instance, but you extend it to the entire fleet. So, now you get that same visibility of a recommendation and the diagnosis for your entire diverse set of database fleet, as well as in a single consistent view. So, to wrap up, I encourage you to explore our newest innovations, which is AI assisted troubleshooting and Cloud SQL query insights for Enterprise Plus, both available now from the Cloud SQL console. Thank you for watching and have a great next. Thanks for watching and stay obras of alarmed and ì»¤med and
 . Hey everyone, I'm Julia and I'm here to give you a quick recap of our talk, Deploy Next.js and Angular apps with Firebase App Hosting. Let's start with an overview of what Firebase App Hosting is. Firebase App Hosting is a Git-centric serverless hosting solution for modern web frameworks built on Google Cloud. App Hosting manages the entire stack for your web app from the build pipeline to the CDN and server-side rendering. You push to GitHub and App Hosting figures out the rest. App Hosting uses Cloud Build to run your framework build to generate static assets and create a container image for Cloud Run. Then App Hosting deploys that container image to Cloud Run which sits behind a fully managed networking layer with CDN, load balancing, certificate management, and DNS all set up and managed for you. And we announced in the talk that Firebase App Hosting is in general availability with support for Angular and Next.js. Being GA means that App Hosting is fully supported for production use and governed by the Google Cloud Platform terms of service. But that's not all that's new. You can now deploy Nuxt and Astro apps to App Hosting as well. These framework integrations are in preview. App Hosting unlocks rapid development by managing the infrastructure for your entire stack and integrating with GitHub for automated deployments. And since our preview launched last year, we've added new features designed to boost your productivity, such as an improved UX for debugging build failures, a built-in monitoring dashboard to understand your app's performance and health, and the ability to instantly roll back to a previous version of your app without rebuilding if you spot a regression. App Hosting accelerates time to market because it's opinionated, but it's also flexible. So let's address the need for control. You can customize your underlying cloud run configuration to meet your app's compute needs. And you can define granular environment configurations with App Hosting. You can restrict access for an environment variable to the build environment or the runtime environment or both. You can also customize which region your app is served from. We have regions available in the United States, Europe, and Asia to ensure uncached content is served close to your end users. You can also now connect your App Hosting back into a VPC network in Google Cloud so that you can augment your app's stack with more backend services. And finally, you can customize your app's build and start commands. App Hosting provides smart defaults for how to build and run your app based on the detected framework, but if you need to customize them, you can. Adding more customization options is just one way that we're committed to making App Hosting ready for enterprise use. There are three things you need to think about when picking a hosting solution to make sure it scales with you as your business grows. First, your infrastructure needs to scale so that if your app gets a sudden increase in traffic overnight, your users don't experience a loss in performance. Second, your costs need to scale. And third, it needs to be secure from the start. App Hosting checks all of these boxes with auto scaling up and down with demand with Cloud Run, scale to zero network pricing, and tight integration with Google Cloud Secret Manager for enterprise-grade secrets management. Thanks so much for watching this recap. We hope you build your next web app with Firebase, and you can get started by downloading one of our sample apps by running npm init at app hosting.
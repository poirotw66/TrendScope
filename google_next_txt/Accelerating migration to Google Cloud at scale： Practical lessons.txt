 Hey everyone, I'm Darren Lester and I'm a senior cloud architect at E-PAM Systems. My role and passion is to help organisations avoid making costly mistakes when adopting cloud. Welcome to this super speedy version of the session that I co-presented at Google Cloud Next with Robin Averlein, Deutsche Bank's Head of Architecture. Deutsche Bank are migrating hundreds of applications from on-premises to Google Cloud and E-PAM are helping them on this journey. E-PAM provides capabilities in many areas, including hands-on cloud migration. But we also make up a significant proportion of the bank's cloud centre of excellence function. The team performs typical CCOE activities, including architecture governance, cloud strategy definition, creation of repeatable cloud artefacts and cloud advisory. We want to be seen as trusted advisors that help the bank to improve their migration velocity and quality. Because we review every application that lands on Google Cloud, we're uniquely positioned to spot recurring issues and we're able to harvest solutions that might be of benefit to the wider migration programme. One of the biggest challenges is how long it takes application teams to create their designs. The Google Cloud ecosystem provides so many services and it's just not realistic to expect every application team to have a cloud architect that is A, an expert in every service and B, fully aware of the bank's strategy. We were seeing divergent solutions to the same problems and use of services that are not approved for use in the bank. Design issues were often only spotted when we conducted formal reviews. And so we implemented a set of initiatives to eliminate these pain points. And interestingly, most of these initiatives are not particularly technical. For example, like most organisations, the bank has blueprints which identify a bunch of logical placeholders to do a common task. Each of these placeholders could be implemented using a number of different technologies. But often, application teams would pick non-ideal technologies and this can be costly. So, we provided a set of decision trees to help application teams pick the best technologies for their particular scenario from a menu of technologies that have been approved for use in the bank. These DTs pre-bake various considerations like cost, availability, RTO and RPO, scalability and portability. But they also consider, do we already have the right skills in the bank to use this technology? How steep is the learning curve? Are the necessary skills available in the market? This massively speeds up the solution design process. The DTs provide pre-canned rationale that application teams can use in their design documentation. It also helps us as an architecture governance team. If an application team makes choices aligned to the decision trees, then we're generally going to be happy. But if they deviate, then these decisions need more scrutiny. Another thing we often observed is where an application team comes to a review and they tell us they spent six months solving a problem, but we know that another application team has already solved that problem. We wanted to eliminate this waste and so we produced a lightweight mechanism to crowdsource proven solutions to common problems. Whenever we spot a solution that looks like it might be reusable, we capture it. We capture the problem, the solution overview, the key technologies that we used, the application that implemented the solution, design links, code links and we capture a named individual that knows something about this solution. That way, when another application comes along and wants to replicate the solution, they can get quality help from someone who's done it before and we have over 50 of these solutions already. I've shown you just a flavour of some of the artefacts we created, but we need a way to ensure that application teams actually use this stuff. So we created a training programme which we call Cloud Architecture Design Familiarisation, or CADFAM for short. The CADFAM tells you where are you in your cloud journey, what resources do you need and the order that you should use them, best practices such as diagramming and SRE adoption, how to book an architecture review session and how to prepare for such a session, and finally, where to get help. But we know we can't just send out this material and expect people to read it, so we conducted training sessions and we trained over 500 people. And then we built a Cloud Architecture Design Community, which is made up of over 1,000 architects, engineers, delivery leads, application owners and anyone else that might be interested. We use this community to crowdsource solutions to design challenges, but crucially, we identify and solve issues early. A side benefit of building this community is that the CCOE, at the centre of the community, is now known to all and trusted. The migration community wants to engage with us because they know it will benefit them. Did this all work? Well, we did some number crunching across 4,300 Jira tickets. We saw strong correlations between these initiatives and the overall design duration. Over the last two years, the average per-application design duration has been reduced by 70%. This is a staggering reduction in the overall migration effort and cost. But additionally, we now see solutions that are higher quality, more consistent and which will have lower TCOs over their lifetimes. It's interesting to consider how much this might save another organisation performing migration at scale. Imagine you're an organisation migrating 200 applications. On an average, you currently spend 200 days per application in the design phase. It sounds like a lot, but it's a common reality for organisations that are early in their cloud migration journey. For such an organisation, a 70% reduction in design time equates to a minimum saving of around $30 million. So our advice to you, if you haven't got any enterprise cloud architects delivering these initiatives in your own CCOE, then you need to prioritise this activity. For a large organisation, the return on investment will be in excess of 100x. This is simply a no-brainer. Thanks very much for your time.
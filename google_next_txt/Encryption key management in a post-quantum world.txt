 My name is Brad. I'm the lead product for key and secret management at Google Cloud. Presenting with me is my inch partner, Sonal, and we've got also Austin from Talos, one of our encryption partners. So we've got a lot of things to talk about today. It's a fairly packed agenda. I'm going to give you a brief overview of how we think about key and secret management, and then we're going to jump in some of the advancements that we're launching throughout the year. This is going to be backed by a few demos, and you can see the demos here listed that we're going to go through. But before I jump in, I wanted to see a show of hands. Are there developers in the audience? Anybody? Great. How about administrators? Okay. Who deals with compliance? Who deals with privacy? All right. Great. So we've got something for everybody in the room here. So let's chat about how we think about key and secret management at Google Cloud. So at Mission Control, for our team, we're hard at work launching products and features that fulfill our core mission. That mission is making GCP the most secure, private, and compliant cloud in what we consider to be an ever-changing landscape that includes quantum computing. It's all the advancements in AI, et cetera. We've been working on this mission for a number of years, and we have what we consider to be a fairly mature product set. But you don't have to take my word for it. Just last month, we were recognized as a leader in the Forrester wave for data security. And you'll also note that partner Talos is going to get up here in a little bit, is also a very fast-moving company on this wave as well. We're proud of the work that we do here to keep your environment protected. That said, these products are only effective if you can find them and you can turn them on and you can use them. So our focus for the last year or two is to make sure that our customers in Google Cloud can take advantage of the protections that we provide. So ease of use is the key. All of the launches that we're going to talk about today are about unlocking the easy button for your security, privacy, and compliance needs. So we think about the portfolio broadly in kind of three categories. So baseline is powered by Google-owned and controlled keys. Google launched this almost 10 years ago. And if you do nothing else, your keys are protected here via shared keys with automated management. Everybody here has data stored in GCP, right? Probably everybody here has some data that's protected by default encryption. So look at your neighbors, say hi. You're probably sharing a key with them. So enterprise security and privacy is where the bulk of enterprise data should live. So look at your neighbor again. If you're not sure you want to share a key with them, protect your data here. So this gives customers ownership and control over their keys. And we're striving to make it drop-dead easy for you to take advantage of the additional protection that customer-owned keys will give you. Now, if you have greater, more stringent compliancy and privacy protection needs, zero privilege, security, privacy, and compliance is for you. And this is a collection of products that gives you greater control so that you can meet those strict regulatory needs. So what does that mean exactly? These are where the products kind of fall. Google default encryption is baseline. In enterprise, this is anchored by cloud KMS AutoKey and our secret manager products. And zero privilege, that's things like external key management, which we've had in the market for a while, bare metal HSM, and others that we'll talk about in more detail as we kind of go through here. The items that are flagged in green are the items that we have new launches that we're going to talk about today. So with that, I want to go into the enterprise features. These are products that everyone who has data in cloud that they care about should be taking advantage of. So last year at Next, we announced a preview of AutoKey. These are customer-owned encryption keys with automated management. We post Next, we GA'd on several of these services in the fall. So what is cloud KMS AutoKey? This is a customer-owned encryption key that is automatically applied to the right resource at the right time. When enabled, it's really easy to use. The developer requests a key as they are setting up a resource and is automatically granted to them with the appropriate rights and configurations. I want to dig into what that means in a little bit more detail. AutoKey is backed by cloud HSM. That gives it FIPS 140-2 L3 protection, and the root of trust is outside of Google. These keys are automatically applied at the right granularity and location for the resource the developer is working with and is configured with NIST-recommended 365-day rotation period. And we ensure that a separation of duties is maintained. Identities that can encrypt and decrypt the key are separate from those that can rotate, destroy, change, or otherwise manage the key. We believe so strongly in the power and simplicity that AutoKey brings to key management that we want to encourage everyone to experience it. So we're thrilled to announce that we're making it even easier to enhance your cloud security with the launch of the Cloud KMS AutoKey free tier today. As part of the free tier, we're giving the first 100 active key versions per month are free. You also get 10,000 crypto operations per key version per month for free. All management operations on these keys come free at no cost, and you also get automatic key rotation. This makes adopting strong encryption simpler than ever, and while you can achieve a kind of secure by default environment. This is the best free tier in the business. So this free tier is available to all GCP customers, so you can start benefiting from automated customer-controlled encryption today. I encourage you to take advantage of this. We're also pleased to announce that we've launched AutoKey as part of Google Cloud Setup. If you're not familiar with Google Cloud Setup, this guides you through all of the steps to setting up best practices for Cloud Foundation on Google Cloud. This creates your organization, your users, your resources, et cetera. As part of Google Cloud Setup, now AutoKey can be figured by default with one click, and then you can download your configuration for use in Terraform, or you can deploy it directly from the console. I've got a rocket launching on this image, so this must be launched. So KMS AutoKey is available on 12 services. That includes GCS, GCE, and BigQuery. It's in preview on Google Cloud Setup. That launch is imminent. I believe it's launching next month. Let's move to the next topic. I want to talk about PQC. Post-quantum cryptography encompasses cryptographic algorithms designed to remain secure against attacks from both classical computers and future powerful quantum computers. The threat of quantum exploits is forcing us to rapidly innovate to address these challenges. So why are we talking about this today? So PQC has been in the news a good bit lately. Google announced dramatic advances in the post-quantum realm just a little while ago with Willow. And there was a jaw-dropping fact that will give any of the security professionals in here pause. Willow performed a computation in under five minutes that would take one of today's fastest supercomputers 10 septillion years to complete. So also in the news, PQC became less of a moving target when NIST finalized its first three PQC standards last August. And whether or not this last one is fake news or not, some researchers made news, made noise about their progress using PQC to exploit encryption protocols. So our customers have been starting to ask us about this. We're starting to hear a lot of questions about what is Google Cloud doing here. And it's not too soon to ask. And I want to explain why. So crypto migration takes time. And if you just look at the past, you can see ECC took us almost two decades to gain adoption. AES took more than a decade. SHA-3 is still not quite there. And PQC is a different kind of migration. You know, to use an old cliche, we're putting the plane together while we're flying it. We're trying to implement these standards while they're still being defined. And we expect significant performance overhead for some of the implementations. So this is not going to be just a drop and replace type of migration. So we encourage all of you to start thinking about this and start figuring out how you're going to address some of this. So let's talk about how cloud is doing that. First, the good news is that Google has been working on post-quantum cryptography for almost a decade. We published our first experiments in 2016 and 2018. This was followed by a Cloudflare experiment in 2019 where we deployed PQC key agreement algorithms. And we enabled quantum safe encryption and transport in 2022. And that was ahead of NIST ratification in August of 2024. So now, let's go into what Google Cloud specifically is doing. So we think about threats in four categories. And I think it's worth going into these in some detail. Our P0s are asymmetric encryption and digital signing, followed by a P1 of symmetric cryptography and a P2 of fancy crypto. Asymmetric encryption is used primarily for encryption in transit and is a perfect candidate for early adoption. Digital signing, when people talk about this, sometimes they think that this is less of an issue because the thing people get worried about is the store now decrypt later attack vector. But we think digital signing is very important to look at now because this is often the root of trust for many applications. Devices are very difficult to update. They have a long lifetime, a long development lifecycle, and implementation may be challenging because of the performance on these devices. For that reason, that's why we have this at a P0. Now, the bulk of your data is likely encrypted on this P1 symmetric cryptography. But we've got a good handle on this one, right? We're less concerned because the migration to 256-bit keys, which will get you what you need, is fairly cheap. Fancy crypto is basically the bucket for everything else. And that one's a P2 because we need to get these first three. If you've got fancy crypto, you've got something that doesn't fall in these first three categories, I'm not saying don't look at it. You should look at it. We're going to start tackling that after we get through the first three. So how are we doing? So for the P0 of asymmetric encryption, as I mentioned earlier, Google has already enabled protections for transport in ALTS. Also for the P0 of digital signing, earlier in the year, we announced a preview of quantum-safe digital signatures in Cloud KMS, backed by software keys. At this point, I've done a lot of talking. I'd like to show you. So Sonal, our inch partner, is going to come up and walk you through a demo. Please welcome Sonal to the stage. Thank you, Brad. All right. So as Brad mentioned, Cloud KMS now offers quantum-safe digital signatures. We recently enabled two algorithms, which were standardized by NIST. Those are the MLDSA 65, which is specified in FIPS 204, and the SLH-DSA SHA-2 128S, which is in FIPS 205. So let me walk you through a demo of how to create PQC keys in Cloud KMS UI. This is the same UI. If you're a security admin or a key admin, you would have probably used this UI to create normal keys. Nothing different in the UI. You just go to the same UI, and we'll see where the differences are. That's the create key page. Let's give it a name. As Brad mentioned, the current protection that we have is only software. We are still working on hardware protection for PQC. Once you select the purpose to asymmetric sign, you will see the two signatures pop up in the drop-down box. Let's select one for now. And give it a key rotation period. And there you have it. We have our crypto key by the name of test PQC. If you click on it, there is a default version that has already been created with the algorithm that we just selected. You could grab all of the raw key material right from here, get the public key, and use it as it is. This seems raw right now because ASN.1 standard is not yet available for PQC. Once that's available, I think this would not look as raw as it is right now. All of this is also available through our usual APIs and client libraries, but you could use it. The next thing I want to demo here is, which is not available for usual keys, you can change the algorithm between two post-quantum digital signatures. So what we are doing right now is we're switching the algorithm for this crypto key. And next time when we create a version, it's going to use the new algorithm that we selected. So you have the latest version, now with the new algorithm. This is something that is not possible. The switching is not possible in non-post-quantum keys, but it's available in post-quantum keys. Both of these are in public preview. Please give it a try and let us know what you think. Thank you, Sonal. Okay, let's switch gears. Let's talk about Secret Manager. And this is another one where I want to see a show of hands. How many people here are familiar with and or have used Secret Manager? Got a few. Saurabh, take a look. That's good. So, okay. Secret Manager is a native Google Cloud product. It's a single source of truth to store, access, manage, and audit secrets. So if you're not familiar with it, please do go check it out. This allows you to securely store sensitive data, such as API keys, passwords, and certificates. This is all encrypted at rest. Provides centralized management and a single source of truth for accessing and auditing secrets across Google Cloud. It gives you fine-grained access control using IAM to manage permissions for both users and applications. It enables management and lifecycle of secrets that includes versioning and rotation to enhance security. And it integrates with other GCP services that includes GKE, Cloud Run, Cloud Build, and others. This gives you seamless secret access where you need it. That falls with my easy theme that I started in the beginning. We want to make sure that you get the tools that you need, and we make it easy to use. So, keeping with that easy button theme, I want to drill down in one of our new Secret Manager integrations. Launched late last year, Secret Manager for GKE enables users to access secrets as volumes mounted in Kubernetes pods. Because this product is maintained, managed, and supported by Google, there's no need for maintenance or custom coding. It's backed with Google Cloud technical and SLA support, and it's supported on both autopilot and standard clusters, as long as you're using GKE versions 1.27.14 and later. So, what's the new thing that we want to announce today? Today, we are launching auto-rotation for GKE secrets. When an update is made, we automatically propagate the changes to volume mounts. You used to have to restart the pod. No pod restart is required anymore. So, it's quite easy. Secret rotation in Secret Manager for GKE is launched, and it's available today. So, please do go try it out. Once again, the rocket has taken off. So, I want to continue to talk about Secret Manager. So, check out this quote, misconfiguration errors are the largest contributors to service-level failures. That's from ERS. Y'all are familiar with ERS, yeah? So, we took this quote to heart, and we want to make it easier for our customers to avoid this pitfall. So, we launched Parameter Manager for centralized and secure storage of all workload configuration parameters. Parameters can include DB connection strings, API keys, UI preferences, environment configurations, credentials, and or secure connection strings. So, why should you care about this? So, Parameter Manager enables you to maintain a single source of truth for all your parameters across deployments while mitigating security and compliance risks. But this is another one where I think it's better to show you. So, Sonal's going to take it over and talk it through. Let's try to create some parameters. This is the usual Parameter Manager UI. This is actually the Secret Manager UI, and I'm just going to pause this and take it back a little bit. So, if you're familiar with Secret Manager, you might see this is the Secret Manager UI, and you have a tab here called Parameter Manager. Parameter Manager is just an extension of Secret Manager, so you can go to the UI and or go to the APIs and just use this from within Secret Manager. Let's try to create a parameter. Give it a name and choose a format. We'll mostly use all defaults for now. You see the parameter format is YAML over here. We have the location chosen as global location. Let's give it a label. This is totally optional. And hit Create. If you go to the Overview tab over here, you should be able to see all the metadata that is in the parameter. The version will actually create, will have the value of the parameter that we are going to store. So, let's call this version V1. Give it the YAML that we actually want to embed in our configuration file and create. So, here you see you have the payload on the left and the rendered output on the right. It's a little tiny, but at this moment, it's the same because this is a very basic workflow. You create a parameter, give it a value, and that's about it. What I'm going to show you next is something really cool. You can actually create a secret in Secret Manager and embed the secret value in a parameter version so that you can reference the secret from within the parameter value. What this allows is it actually prevents unauthorized access of the secret value and any leaks or any leak of the secret value that you don't want. So, let's see how to do that. For this next part, I'm going to pick a parameter that was previously created and that has access to a secret that is already in present. So, let's go back, pick an existing parameter, and we'll create a new version. Let's give it the YAML that we want. As you can see, you see some references to the secret over here. This is because this parameter already has a secret aligned to it. We'll create this. Now, if you see on the left, you have the secret manager reference. This is where the secret actually lives and the rendered output will resolve what the secret value is. So, when an application actually looks at the configuration file and it sends a request to the secret manager, what you see on the right is what is actually going to get executed. Parameter manager is available as part of secret manager. It is in GA. Please go try it out. We also have members of the team over here, so if you have any questions later, please stop by in the hallway. Hopefully, y'all don't think I went too crazy on the rockets, but I kind of like them. Okay, let's switch gears. Let's go to the zero privilege section. I want to talk about, again, this is the area where for those of you with more stringent privacy requirements, either due to compliance needs or otherwise, this is where you're going to live. So, let's talk about these encryption products in a little bit more detail. This one is near and dear to me. Prior to joining the cloud team, I was PM lead at Workspace for about five years. CSE was one of the products that my team kicked off while I was there. For the last year, my Cloud KMS team has been working with the Workspace team to integrate Cloud KMS with client-side encryption. CSE gives Workspace users confidentiality and granular control over data access. Our integration ensures that CSE comes back by all of the Google Cloud's regulatory and compliance certifications. Get your phones out because I've got QR code on this one and I've got a QR code on the next one as well. The next two announcements both have these. If you miss this for some reason, I think this will be on YouTube later too. Our integration with Google Workspace CSE is available in private preview today. That's why the rocket's just sitting on the launch pad. GA will follow by the end of the quarter. Now, this is the last launch that we want to talk about. single tenant HSM. So, many of you are likely familiar with Cloud HSM. This is our FIPS 140-2 L3 certified HSM solution which is built at cloud scale. It's in all of our data centers. This is a highly performant HSM solution available in all our regions. It gives our customers access to hardware-backed keys that follow NIST recommendations again at scale. Today, we're extending Cloud HSM to include a single tenant option. This gives greater isolation from cloud customers and from Google operators to those who need it. Again, single tenant Cloud HSM provides key isolation from cloud customers and Google operators. That's the main reason that you're going to use it. It's designed for those who want the scalability and performance of Cloud HSM but require the greater privacy and control that single tenant keys provide. Single tenant will be available in all cloud regions and comes with all of the performance and reliability guarantees that you would expect from a Google native service. Some highlights, it can be provisioned in minutes providing hardware-backed FIPS 140-3 level 3 validated protection. The customer has complete control over key access. We provide quorum-based access for sensitive operations and it's integrated in all cloud services and this includes all the logging, monitoring, and disaster recovery that you would expect from a Google Cloud solution. I think it's worth diving into this one in a little bit more depth. Sona's going to walk you through this and through a demo. So while the single tenant cluster actually sits on our existing cloud HSM infrastructure, you have to realize that the cluster is completely owned and controlled by the customer. We as Googlers or anybody else will have no access to it. Each cluster is a set of partitions that is dedicated to you as the customer and it is distributed across a bunch of HSM devices. For now, it is regional but we'll soon be adding multi-regional support when we get to GA. The key thing to note over here is the customer is the complete owner of this. Without the customer actually granting access, nothing can happen. They have to grant access for authorization which is going to be, which is going to require, as Brad said, a quorum-based access workflow. Also, the customer has to grant access to Googlers if at all it is required for any operations. So let's take a look at the demo. This demo is going, I'm going to pause this demo quite a bit. We do not have a UI for this demo. This demo is all CLI-based right now. So I'll walk you through the steps as we go. Thank you. This is our demo outline. We'll create a single-tenant HSM instance. We'll create a key in that instance. We'll use encrypt and decrypt operations with this key. Then we'll try to disable the instance and we'll show you that the key is no longer accessible, the key that we created in this instance. Now, because this is single-tenant and because we want to show you how the quorum-based workflow works, you will also see certain proposals for authorization as we go through the demo. We will require M of N approvals to execute all the critical operations that are there. So step number one, let's create an instance. So we're trying to create an instance here in the U.S. central one. Right now, you see it is pending two-factor authorization because we really haven't given it enough M of N approvals as yet. So the next step here is going to be let's grant these approvals. We set the approval count to three over here, so it is M of N, N is equal to three over here, so we're going to require that many approvals. So here, you see we are giving it certain public keys and we're creating a proposal here to actually use these keys and grant it access. The proposal here is to register these two-factor keys. I can actually use the pointer here, but if you see register two-factor keys on the second last line, that is the proposal that we are creating. You can see the pending state of the proposal, which means that we still haven't given it all the approvals that it needs, so let's go ahead and do that. There we see. We just granted all the approvals needed. I gave it certain public keys that I had and then used my private key, and the proposal that is required that will now allow us to execute the command to create a single tenant instance is now approved. Now we can go ahead and execute the command to say, okay, create my instance. Okay. So if you missed that, let me go back. The instance was active. We just created an instance in US Central 1. We call the instance ST instance and looked at the state of the instance. It's now active. Okay. Let's move to the next step and create a key. This key creation is exactly as you would create any other key, KMS key, except that you would give it the instance name of the single tenant instance and the protection level of HSM single tenant. So here you see the protection level is HSM single tenant. The key is enabled and it has been attested with Cambium attestation over here, the format that you see. We created this key in US Central 1. This next step is going to show you how to encrypt and decrypt. This is just normal encryption decryption, but just to show you that the key is actually working. So we routed the ciphertext that was created into a file and then we decrypted it and now we are going to decrypt it back into a file using the key that we just created on the instance. There you have it. Now to show you that the key that we already have in this instance is no longer usable because it's in that instance we'll disable this instance and then try to do the decrypt operation one more time. So we just sent a proposal to disable the instance. We'll have to go through the quorum-based workflow one more time. This time we'll set the M of N to 1, go through the process of approving the proposal to grant this access and then execute the command to disable single tenant instance. there you can see the state of the instance is now disabling which means it's going to be shut down pretty soon. So we're using the same key and we'll just do another decrypt operation and there you see. It gives you an error because the key is no longer accessible. The instance is down. So single tenant HSM is available in private preview. Please take a picture of this. We would love your feedback. This is one of our major launches this year. We would really like to have as many people try this out. So please sign up. We have, again, we have a lot of members of the team out here so if you have any questions please see us in the hallway. Back to you, Brad. We're going to bring Austin up on stage and talk a little bit about our partnership with Talos. Great. Thank you. Happy Friday, everybody. I wasn't going to do this but there's great participation when you guys raised your hands. How many of you guys have heard of Talos before or work with Talos? Okay. Great. Good to know. Thank you. So we're honored to be here today. Thank you so much for having us. I'm going to do a quick commercial on Talos and really talk about the integrations that we've started with Google or we've done with Google. So after the acquisition of Imperva, Talos is now one of the cybersecurity leaders in securing applications, data, and identities. And for me, it's always really important to understand the why behind things. We started our partnership with Google about five years ago and during that time the geopolitical climate was changing and I know it's even crazier now but back then it kind of started the process, right? So customers kind of initially out of Europe really wanted to manage and control their data, right? Digital sovereignty was very, very important to them. And with partnering with Google, we were able to help achieve that. Brad mentioned that on his slides today that showed that we're kind of like at the highest level tier if customers need that level of security. What we're going to talk about today is our data security products basically to protect anything, anywhere, and across any environment. We have virtual, we have hardware, and we also have as-a-service solutions. We've been named twice as the Google Partner of the Year. So Talos is the leader in both general purpose and PayShield HSMs. We've been in this space for nearly 30 years. Our PayShield HSMs protect 80% of the world's financial institutions. Our CypherTrust platform helps enable cloud KMS, ECAM, I'm sorry, and also workspace CSE. That coupled with our identity solution, which is SafeNet Trusted Access, helps authenticate users for workspace. Now Brad, both Brad and Sonal talked about PQC and that tidal wave that's coming. Talos is also a trusted advisor in this space. We really collaborate with vendors, partners, integrators, and even our competitors to really help move forward this ecosystem. It's a very complex field as you can imagine, and not one vendor can do it, so we really have to work together on that. We actually had one of our co-developed algorithms Falcon approved by NIST for PQC, and our HSM products and also our CypherTrust products support PQC as well. My marketing team is going to kill me if I don't bring this up, so please scan the QR code. You can learn more about our products, learn more about our great integration with Google, and we also have a space in the expo booth in the security center, so feel free to drop on by. Worst case, you'll get some awesome socks, I'll be down here as well if you need any more questions, and I'm going to hand it back to Brad to wrap it up. Thank you. Thank you, Austin. Okay, folks, we're wrapping it up. So here's what we talked about today. You know, to tie it up, we've been busy working on launches to make it easier for you to find and enable the encryption and secret management products that you need to keep your enterprise secure, private, and compliant. A reminder, AutoKey, including the free tier, secret rotation for GKE, and parameter manager are all generally available. AutoKey and Cloud Setup, QuantumSafe Digital Signing, Cloud KMS for Google Workspace CSE, and single tenant Cloud HSM are all in preview and the launches are imminent. Please do check out these products. We would love your feedback. That's how we make our products better. I know that it's been a great long conference for all of you. Please don't take off from next just yet. Our colleague Elo is presenting at this session here, BRK2-187. A little bit later today, I encourage you to go check it out and do go check out the demos in the showcase booth at the Cloud Security Hub. We put a lot of effort into that and we would love for you to check out the products in more depth there. And finally, you see this in every session. this is how we determine which content gets presented next year. So please do go in and rate our session and we would love to hear your feedback on what you thought of today's session. So thank you so much for your time. We really appreciate it.